import { CharacterModel } from './types.js';
export declare class Character {
    private canvas;
    private gl;
    private shader;
    private batcher;
    private mvp;
    private assetManager;
    private skeletonRenderer;
    private lastFrameTime;
    private framebuffer;
    private framebufferTexture;
    private outlineShader;
    private quadBuffer;
    private isMouseOver;
    private isDragging;
    private dragStartRelativeX;
    private dragStartRelativeY;
    private lastDragEvent;
    private velocity;
    private model;
    private character;
    private currentAction;
    private position;
    private animationFrameId;
    private isVehicle;
    private allowInteract;
    constructor(canvasId: string, onContextMenu: (e: MouseEvent | TouchEvent) => void, initialCharacter: CharacterModel, allowInteract?: boolean);
    private initializeCanvas;
    private initializeWebGL;
    private setupEventListeners;
    private initFramebuffer;
    loadCharacterModel(model: CharacterModel): void;
    fadeOut(): Promise<void>;
    private saveToSessionStorage;
    private loadFromSessionStorage;
    private load;
    private loadCharacter;
    private currentMousePos;
    private handleMouseMove;
    private render;
    private randomPick;
    private turnDirection;
    private nextAction;
    private handleCanvasClick;
    private handleDragStart;
    private handleDrag;
    private handleDragEnd;
    destroy(): void;
    getAnimationNames(): string[];
    private getAnimationMarkov;
    playAnimation(animationName: string): void;
    getCanvasId(): string;
    getModel(): CharacterModel;
    isAllowInteract(): boolean;
    setAllowInteract(allowInteract: boolean): void;
}
